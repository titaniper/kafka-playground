/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import org.apache.kafka.clients.producer.KafkaProducer
import org.apache.kafka.clients.producer.ProducerConfig
import org.apache.kafka.common.record.TimestampType
import org.apache.kafka.connect.data.Schema
import org.apache.kafka.connect.data.SchemaBuilder
import org.apache.kafka.connect.data.Struct
import org.apache.kafka.connect.sink.SinkRecord
import java.util.*
import kotlin.collections.ArrayList


class App {
    val greeting: String
        get() {
            return "Hello World!"
        }
}

fun main() {
    val task = MockSinkTask("name", "partitioned.debezium.ben4.ddd_event")
    val timer = Timer()
    val delay = 5 * 1000L // 1 minute in milliseconds

//    timer.schedule(object : TimerTask() {
//        override fun run() {
//            println("Task executed after 1 minute")
//
//        }
//    }, delay)

    // Your task code goes here
    task.put(task.test1())

}
